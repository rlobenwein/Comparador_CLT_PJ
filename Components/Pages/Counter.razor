@page "/counter"
@rendermode InteractiveServer
@inject ICalculatorService calculatorService;

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<div class="form-group">
    <label for="periodicity">Periodicidade:</label>
    <InputSelect @bind-Value="salary.Periodicity" id="periodicity" class="form-control">
        @foreach (var periodicity in Enum.GetValues(typeof(Periodicity)))
        {
            <option value="@periodicity">@periodicity</option>
        }
    </InputSelect>
</div>

<div class="form-group">
    <label for="amount">Valor do Salário:</label>
    <InputNumber type="number" @bind-Value="salary.Amount" id="amount" class="form-control" />
</div>

<div class="form-group">
    <label for="contractRegime">Regime de Contrato:</label>
    <InputSelect @bind-Value="salary.ContractRegime" id="contractRegime" class="form-control">
        @foreach (var regime in Enum.GetValues(typeof(ContractType)))
        {
            <option value="@regime">@regime</option>
        }
    </InputSelect>
</div>

<div class="form-group">
    <label for="currency">Moeda:</label>
    <InputSelect @bind-Value="salary.Currency" id="currency" class="form-control">
        @foreach (var currency in Enum.GetValues(typeof(Currency)))
        {
            <option value="@currency">@currency</option>
        }
    </InputSelect>
</div>

<div class="form-group">
    <label for="benefits">Benefícios:</label>
    <InputNumber @bind-Value="salary.Benefits" id="benefits" class="form-control" />
</div>


<p role="status">Salário: @salary.Amount</p>
<p role="status">Regime: @salary.ContractRegime</p>
<p role="status">Regime: @salary.Currency</p>
<p role="status">Regime: @salary.Periodicity</p>
<p role="status">Líquido: @netSalary</p>


<button class="btn btn-primary" @onclick="Calc">Click me</button>

@code {
    private Salary salary = new Salary();
    private decimal netSalary = 0;

    private void Calc()
    {
        try
        {
            netSalary = calculatorService.CalculateNetCLT(salary);
            Debug.WriteLine("Submit successful");
            Console.WriteLine($"Submit successful");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error during calculation: {ex.Message}");
        }
    }
}
